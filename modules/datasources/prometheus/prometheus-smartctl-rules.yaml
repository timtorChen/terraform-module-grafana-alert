---
# yaml-language-server: $schema=../../rule-groups/schema.json
- name: metrics-check
  interval_seconds: 300
  rules:
    - name: "smartprom-no-data"
      annotations:
        summary: "prometheus-smartctl metrics returns NoData"
        description: >-
          prometheus-smartctl metrics has been no data for 5 minutes.
          Please check if prometheus-smartctl or Prometheus is working.
      condition: "Z"
      datas:
        - ref_id: "Z"
          model:
            expr: "absent(smartprom_smart_passed) or vector(0)"
            instant: true
      no_data_state: "Alerting"
      exec_err_state: "Error"
      for: "5m"
      labels:
        severity: "critical"
- name: check
  interval_seconds: 300
  rules:
    - name: "smartprom-device-smart-check-failed"
      annotations:
        summary: "Device SMART check failed"
        description: >-
          SMART check is failed
          for drive {{ $labels.drive }} model {{ $labels.model_name }} on instance {{ $labels.nodename }}.
      condition: Z
      datas:
        - ref_id: A
          model:
            expr: smartprom_smart_passed{${smartctl_selectors}}
        - ref_id: B
          model:
            type: reduce
            expression: A
            reducer: last
        - ref_id: Z
          model:
            type: math
            expression: "$B == 0"
      no_data_state: "NoData"
      exec_err_state: "Error"
      for: "5m"
      labels:
        severity: critical
- name: temperature
  interval_seconds: 300
  rules:
    - name: "smartprom-device-high-temperature"
      annotations:
        summary: "Device is under high temperature"
        description: >-
          Temperatue exceeds 70Â°C degree
          for drive {{ $labels.drive }} model {{ $labels.model_name }} on instance {{ $labels.nodename }}.
      condition: Z
      datas:
        - ref_id: A
          model:
            expr: |
              smartprom_temperature_celsius{${smartctl_selectors}}
              or
              smartprom_temperature{${smartctl_selectors}}
        - ref_id: B
          model:
            type: reduce
            expression: A
            reducer: last
        - ref_id: Z
          model:
            type: math
            expression: "$B > 70"
      no_data_state: "NoData"
      exec_err_state: "Error"
      for: "5m"
      labels:
        severity: warning
- name: lifetime
  interval_seconds: 300
  rules:
    - name: "smartprom-device-lifetime-warning"
      annotations:
        summary: "Device remaining lifetime is low"
        description: >-
          Remaing lifetime is below 30
          for drive {{ $labels.drive }} model {{ $labels.model_name }} on instance {{ $labels.nodename }}.
      condition: Z
      datas:
        - ref_id: A
          model:
            expr: |
              smartprom_percent_lifetime_remain{${smartctl_selectors}}
              or
              (100 - smartprom_percentage_used{${smartctl_selectors}})
        - ref_id: B
          model:
            type: reduce
            expression: A
            reducer: last
        - ref_id: Z
          model:
            type: math
            expression: "$B < 30"
      no_data_state: "NoData"
      exec_err_state: "Error"
      for: "5m"
      labels:
        severity: warning
    - name: "smartprom-device-lifetime-critical"
      annotations:
        summary: "Device remaining lifetime is low"
        description: >-
          Remaing lifetime is below 10
          for drive {{ $labels.drive }} model {{ $labels.model_name }} on instance {{ $labels.nodename }}.
      condition: Z
      datas:
        - ref_id: A
          model:
            expr: |
              smartprom_percent_lifetime_remain{${smartctl_selectors}}
              or
              (100 - smartprom_percentage_used{${smartctl_selectors}})
        - ref_id: B
          model:
            type: reduce
            expression: A
            reducer: last
        - ref_id: Z
          model:
            type: math
            expression: "$B < 10"
      no_data_state: "NoData"
      exec_err_state: "Error"
      for: "5m"
      labels:
        severity: warning
- name: wearout
  interval_seconds: 300
  rules:
    - name: "smartprom-device-nvme-wearout"
      annotations:
        summary: "NVMe device is wearing out"
        description: >-
          Nvme device is using out of spare block
          for drive {{ $labels.drive }} model {{ $labels.model_name }} on instance {{ $labels.nodename }}.
      condition: Z
      datas:
        - ref_id: A
          model:
            expr: |
              smartprom_available_spare{${smartctl_selectors}}
              - smartprom_available_spare_threshold{${smartctl_selectors}}
        - ref_id: B
          model:
            type: reduce
            expression: A
            reducer: last
        - ref_id: Z
          model:
            type: math
            expression: "$B <= 0"
      no_data_state: "NoData"
      exec_err_state: "Error"
      for: "5m"
      labels:
        severity: critical
